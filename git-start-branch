#!/usr/bin/env zsh

zparseopts -D -E -- -based-off:=args

if [[ "$#@" -gt 0 ]]; then
    newBranch=$(echo "$@" | head -n1 | awk '{print $1;}')
fi

typeset -A helper
helper=($(seq 1 ${#args}))

for arg in ${(@v)helper}
do
    baseBranch=${args[$arg]}
done

# if newBranch NOT defined, ask for branch
if undefined -s "$newBranch"; then
 lgln -g "Looks like new branch was null or empty..."
 lg -g "Name of new branch: "
 read -r newBranch
fi

lg -g "Received new branch ${newBranch}"

# if baseBranch NOT defined, branch off this branch
if [[ -z "$baseBranch" ]]; then
 baseBranch="$(git current-branch)"
 lg -g "No base branch passed...basing on current branch ${baseBranch}..."
else
 lg -g "Using base branch ${baseBranch}"
fi

if git branch-exists "${newBranch}" >/dev/null 2>&1; then
 lg -r "FATAL: branch ${newBranch} already exists!"
 exit "1"
fi

if ! git branch-exists "${baseBranch}" >/dev/null 2>&1; then
 lg -r "FATAL: cannot base off non-existent branch ${baseBranch}!"
 exit "1"
fi

git diff-index --quiet HEAD --
if [[ "$?" -eq 1 ]]; then
 lgln -g "Looks like there are uncommitted changes... stashing..."
 git stash --include-untracked
 lgln -g "Storing name of branch with uncommitted changes..."
 prevBranch="$(git current-branch)"
fi

lgln -g "Switching to base branch $baseBranch"
git checkout "$baseBranch"
lgln -g "Creating and switching to new branch called ${newBranch}..."
git checkout -b "$newBranch"
lg -g "Pushing..."
git push
lg -g "Setting upstream to origin/$newBranch..."
git branch --set-upstream-to=origin/"$newBranch" "$newBranch"

# if a branch not master previously defined
if [[ -n "${prevBranch+x}" ]]; then
 lg -g "Checking out ${prevBranch} (branch with uncommitted changes)"
 git checkout "$prevBranch"
 lg -g "Let me unstash those uncommitted changes to the branch ${prevBranch}..."
 git stash pop
 lg -g "Checking out new branch ${newBranch}..."
 git checkout "$newBranch"
fi
